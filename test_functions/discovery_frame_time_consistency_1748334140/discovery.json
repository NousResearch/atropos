{
  "discovery_id": "discovery_frame_time_consistency_1748334140",
  "domain": "frame_time_consistency",
  "timestamp": "2025-05-27T01:22:20.347233",
  "function_code": "\n# Auto-generated VR optimization function\n# Type: exponential\n# Fitness: -1000000000000.0000\n\nimport numpy as np\n\ndef vr_optimization_function(features):\n    \"\"\"\n    VR optimization function discovered through evolutionary algorithm\n    \n    Args:\n        features: Array of input features [gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type]\n    \n    Returns:\n        Optimized output value\n    \"\"\"\n    \n    # Feature weights\n    weights = [0.3900248918585145, -0.5796707947235356, 0.754544614182979, -0.7064317495703227, 0.007866426664854265, -0.7949336218180736]\n    x = np.dot(features, weights[:len(features)])\n    \n    # Exponential function\n    exp_arg = np.clip(1.7996454781413975 * x, -50, 50)\n    result = np.exp(exp_arg) + -4.52296505206495\n    \n    return np.clip(result, -1e6, 1e6)\n\n# Example usage:\n# result = vr_optimization_function([gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type])\n",
  "fitness_score": -1000000000000.0,
  "discovery_method": "simple_evolution",
  "generations_run": 25,
  "population_size": 20,
  "function_type": "exponential",
  "parameters": {
    "scale": 1.7996454781413975,
    "weights": [
      0.3900248918585145,
      -0.5796707947235356,
      0.754544614182979,
      -0.7064317495703227,
      0.007866426664854265,
      -0.7949336218180736
    ],
    "offset": -4.52296505206495
  },
  "discovery_time": "2025-05-27T01:22:20.346528"
}
