{
  "discovery_id": "discovery_frame_time_consistency_1748333610",
  "domain": "frame_time_consistency",
  "timestamp": "2025-05-27T01:13:30.893867",
  "function_code": "\n# Auto-generated VR optimization function\n# Type: exponential\n# Fitness: -1000000000000.0000\n\nimport numpy as np\n\ndef vr_optimization_function(features):\n    \"\"\"\n    VR optimization function discovered through evolutionary algorithm\n    \n    Args:\n        features: Array of input features [gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type]\n    \n    Returns:\n        Optimized output value\n    \"\"\"\n    \n    # Feature weights\n    weights = [0.33362111469905087, -0.35622882413439805, 0.36682118830739885, -0.486961366673617, 0.3693682895232908, -0.727378481764628]\n    x = np.dot(features, weights[:len(features)])\n    \n    # Exponential function\n    exp_arg = np.clip(1.647440711203808 * x, -50, 50)\n    result = np.exp(exp_arg) + 0.81567028378001\n    \n    return np.clip(result, -1e6, 1e6)\n\n# Example usage:\n# result = vr_optimization_function([gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type])\n",
  "fitness_score": -1000000000000.0,
  "discovery_method": "simple_evolution",
  "generations_run": 25,
  "population_size": 20,
  "function_type": "exponential",
  "parameters": {
    "scale": 1.647440711203808,
    "weights": [
      0.33362111469905087,
      -0.35622882413439805,
      0.36682118830739885,
      -0.486961366673617,
      0.3693682895232908,
      -0.727378481764628
    ],
    "offset": 0.81567028378001
  },
  "discovery_time": "2025-05-27T01:13:30.893674"
}