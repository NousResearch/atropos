{
  "discovery_id": "discovery_comfort_optimization_1748334552",
  "domain": "comfort_optimization",
  "timestamp": "2025-05-27T01:29:12.590760",
  "function_code": "\n# Auto-generated VR optimization function\n# Type: linear\n# Fitness: 1.0000\n\nimport numpy as np\n\ndef vr_optimization_function(features):\n    \"\"\"\n    VR optimization function discovered through evolutionary algorithm\n    \n    Args:\n        features: Array of input features [gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type]\n    \n    Returns:\n        Optimized output value\n    \"\"\"\n    \n    # Feature weights\n    weights = [1.2364612694963877, 1.7662878033410694, -1.2396305530471388, -0.30302795917101966, 0.3995972322916579, -0.017669142102945568]\n    x = np.dot(features, weights[:len(features)])\n    \n    # Linear function\n    result = x + 3.46881794794424\n    \n    return np.clip(result, -1e6, 1e6)\n\n# Example usage:\n# result = vr_optimization_function([gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type])\n",
  "fitness_score": 1.0,
  "discovery_method": "simple_evolution",
  "generations_run": 25,
  "population_size": 20,
  "function_type": "linear",
  "parameters": {
    "weights": [
      1.2364612694963877,
      1.7662878033410694,
      -1.2396305530471388,
      -0.30302795917101966,
      0.3995972322916579,
      -0.017669142102945568
    ],
    "bias": 3.46881794794424
  },
  "discovery_time": "2025-05-27T01:29:12.590299"
}