{
  "discovery_id": "discovery_comfort_optimization_1748334744",
  "domain": "comfort_optimization",
  "timestamp": "2025-05-27T01:32:24.776070",
  "function_code": "\n# Auto-generated VR optimization function\n# Type: linear\n# Fitness: 1.0000\n\nimport numpy as np\n\ndef vr_optimization_function(features):\n    \"\"\"\n    VR optimization function discovered through evolutionary algorithm\n    \n    Args:\n        features: Array of input features [gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type]\n    \n    Returns:\n        Optimized output value\n    \"\"\"\n    \n    # Feature weights\n    weights = [-0.39990804013178716, -0.39950604266626444, 1.0444668064689826, -0.19027565334905017, -0.6392601281820158, 0.425559389789254]\n    x = np.dot(features, weights[:len(features)])\n    \n    # Linear function\n    result = x + 8.090493841963017\n    \n    return np.clip(result, -1e6, 1e6)\n\n# Example usage:\n# result = vr_optimization_function([gpu_util, vram_usage, cpu_util, scene_complexity, duration, gpu_type])\n",
  "fitness_score": 1.0,
  "discovery_method": "simple_evolution",
  "generations_run": 25,
  "population_size": 20,
  "function_type": "linear",
  "parameters": {
    "weights": [
      -0.39990804013178716,
      -0.39950604266626444,
      1.0444668064689826,
      -0.19027565334905017,
      -0.6392601281820158,
      0.425559389789254
    ],
    "bias": 8.090493841963017
  },
  "discovery_time": "2025-05-27T01:32:24.775499"
}
